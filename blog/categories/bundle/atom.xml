<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bundle | Bits]]></title>
  <link href="http://bits.greenhalolabs.com/blog/categories/bundle/atom.xml" rel="self"/>
  <link href="http://bits.greenhalolabs.com/"/>
  <updated>2014-08-06T15:45:45-07:00</updated>
  <id>http://bits.greenhalolabs.com/</id>
  <author>
    <name><![CDATA[Green Halo Labs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Code Snippet: BundleUtil]]></title>
    <link href="http://bits.greenhalolabs.com/blog/2014/08/06/bundle-utility-class/"/>
    <updated>2014-08-06T15:22:04-07:00</updated>
    <id>http://bits.greenhalolabs.com/blog/2014/08/06/bundle-utility-class</id>
    <content type="html"><![CDATA[<p>A utility class for serializing/deserializing Parcelables into/from a Bundle.</p>

<p>Check this out for an example: <a href="https://gist.github.com/arriolac/a66515bad322db0ce747">https://gist.github.com/arriolac/a66515bad322db0ce747</a></p>

<p>```
import android.os.Bundle;
import android.os.Parcelable;</p>

<p>/<em>*
 * Utility class for {@link android.os.Bundle}.
 * Created by chris on 8/6/14.
 </em>/
public class BundleUtil {</p>

<pre><code>private static final String EXTRA_PARCELABLE_COUNT = "parcelable_count";

/**
 * Creates a {@link Bundle} given a list of {@link android.os.Parcelable} objects. This is a
 * convenience method if all the values in the Bundle are Parcelables.
 *
 * @param args the {@link android.os.Parcelable} objects.
 * @return the resulting {@link Bundle}.
 */
public static Bundle createBundle(Parcelable... args) {
    final Bundle bundle = new Bundle();

    // Put Parcelable in bundle
    final int size = args.length;
    for (int i = 0; i &lt; size; i++) {
        bundle.putParcelable(String.valueOf(i), args[i]);
    }

    // Put size in bundle (needed when using
    bundle.putInt(EXTRA_PARCELABLE_COUNT, size);

    return bundle;
}

/**
 * NOTE: This method is used in conjunction with {@link #createBundle(android.os.Parcelable...)}.
 *
 * Returns an array of Parcelable objects contained within &lt;code&gt;bundle&lt;/code&gt;. The returned
 * array is returned in the same order they are passed in {@link #createBundle(android.os.Parcelable...)}.
 *
 * @param bundle the bundle
 * @return an array of Parcelables contained in &lt;code&gt;bundle&lt;/code&gt;.
 */
public static Parcelable[] getParcelablesFromBundle(Bundle bundle) {

    // Count how many Parcelable values in the bundle
    final int numOfParcelables = bundle.getInt(EXTRA_PARCELABLE_COUNT);

    // Get list of Parcelables
    final Parcelable[] parcelables = new Parcelable[numOfParcelables];
    for (int i = 0; i &lt; numOfParcelables; i++) {
        parcelables[i] = bundle.getParcelable(String.valueOf(i));
    }

    return parcelables;
}
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
</feed>
