<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bits]]></title>
  <link href="http://bits.greenhalolabs.com/atom.xml" rel="self"/>
  <link href="http://bits.greenhalolabs.com/"/>
  <updated>2014-04-09T13:46:38-07:00</updated>
  <id>http://bits.greenhalolabs.com/</id>
  <author>
    <name><![CDATA[Green Halo Labs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Code Snippet: AlphaImageButton]]></title>
    <link href="http://bits.greenhalolabs.com/blog/2014/03/26/alphaimagebutton/"/>
    <updated>2014-03-26T10:50:47-07:00</updated>
    <id>http://bits.greenhalolabs.com/blog/2014/03/26/alphaimagebutton</id>
    <content type="html"><![CDATA[<p>Showing different view states (pressed, focused, disabled, etc.) can be a bit cumbersome and tedious when styling views. As a way to reduce the number of states to customize, we created a subclass of a View (an <code>ImageButton</code> in this case but can be any other View subclass) that sets the alpha value depending on the enabled state &ndash; 1.0 if enabled, 0.5 if disabled. This way, the View is translucent when disabled and a custom drawable/asset is not required.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import android.content.Context;
</span><span class='line'>import android.util.AttributeSet;
</span><span class='line'>import android.widget.ImageButton;
</span><span class='line'>
</span><span class='line'>public class AlphaImageButton extends ImageButton {
</span><span class='line'>
</span><span class='line'>    private static final float ENABLED_ALPHA = 1.0f;
</span><span class='line'>    private static final float DISABLED_ALPHA = 0.5f;
</span><span class='line'>
</span><span class='line'>    public AlphaImageButton(Context context) {
</span><span class='line'>        super(context);
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    public AlphaImageButton(Context context, AttributeSet attrs) {
</span><span class='line'>        super(context, attrs);
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    public AlphaImageButton(Context context, AttributeSet attrs, int defStyle) {
</span><span class='line'>        super(context, attrs, defStyle);
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    @Override
</span><span class='line'>    public void setEnabled(boolean enabled) {
</span><span class='line'>        super.setEnabled(enabled);
</span><span class='line'>        setAlpha((enabled ? ENABLED_ALPHA : DISABLED_ALPHA));
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><a href="https://gist.github.com/arriolac/9790179">https://gist.github.com/arriolac/9790179</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Snippet: AutoNextTextWatcher]]></title>
    <link href="http://bits.greenhalolabs.com/blog/2014/03/18/autonexttextwatcher/"/>
    <updated>2014-03-18T23:01:05-07:00</updated>
    <id>http://bits.greenhalolabs.com/blog/2014/03/18/autonexttextwatcher</id>
    <content type="html"><![CDATA[<p>A useful <code>TextWatcher</code> for auto-focusing to the next view once a certain character length has been reached on an <code>EditText</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import android.text.Editable;
</span><span class='line'>import android.text.TextWatcher;
</span><span class='line'>import android.view.View;
</span><span class='line'>import android.widget.EditText;
</span><span class='line'> 
</span><span class='line'>/**
</span><span class='line'> * Created by chris on 3/13/14.
</span><span class='line'> */
</span><span class='line'>public class AutoNextTextWatcher implements TextWatcher {
</span><span class='line'> 
</span><span class='line'>    private EditText mEditText;
</span><span class='line'>    private int mMaxLength;
</span><span class='line'> 
</span><span class='line'>    public AutoNextTextWatcher(EditText editText, int maxLength) {
</span><span class='line'>        mEditText = editText;
</span><span class='line'>        mMaxLength = maxLength;
</span><span class='line'>        editText.addTextChangedListener(this);
</span><span class='line'>    }
</span><span class='line'> 
</span><span class='line'>    @Override
</span><span class='line'>    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
</span><span class='line'>    }
</span><span class='line'> 
</span><span class='line'>    @Override
</span><span class='line'>    public void onTextChanged(CharSequence s, int start, int before, int count) {
</span><span class='line'>        if (mEditText.getText().length() &gt;= mMaxLength) {
</span><span class='line'>            final View nextView = mEditText.focusSearch(View.FOCUS_DOWN);
</span><span class='line'>            if (nextView != null) {
</span><span class='line'>                nextView.requestFocus();
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'> 
</span><span class='line'>    @Override
</span><span class='line'>    public void afterTextChanged(Editable s) {
</span><span class='line'>    }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://gist.github.com/arriolac/9636241">https://gist.github.com/arriolac/9636241</a></p>
]]></content>
  </entry>
  
</feed>
